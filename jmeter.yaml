apiVersion: v1
data:
  trigger: |-
    #!/bin/bash

    TRIGGER=/var/www/html/.run
    
    echo "Content-type: text/plain"
    echo
    echo "OK"
    touch $TRIGGER
kind: ConfigMap
metadata:
  name: trigger
  labels:
    app: jmeter
---
apiVersion: v1
data:
  welcome.conf: |
    # Intentionally left blank
kind: ConfigMap
metadata:
  name: welcome
  labels:
    app: jmeter
---
apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  labels:
    app: jmeter
    app.kubernetes.io/component: jmeter
    app.kubernetes.io/instance: jmeter
  name: jmeter
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    deploymentconfig: jmeter
  strategy:
    activeDeadlineSeconds: 21600
    resources: {}
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
    type: Rolling
  template:
    metadata:
      labels:
        deploymentconfig: jmeter
    spec:
      containers:
      - image: image-registry.openshift-image-registry.svc:5000/openshift/jmeter
        imagePullPolicy: Always
        name: jmeter
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /www
          name: data
      - image: image-registry.openshift-image-registry.svc:5000/openshift/httpd
        imagePullPolicy: IfNotPresent
        name: web
        ports:
        - containerPort: 8080
          protocol: TCP
        - containerPort: 8443
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/www/cgi-bin/trigger
          name: cgi
          subPath: trigger
        - mountPath: /etc/httpd/conf.d/welcome.conf
          name: welcome
          subPath: welcome.conf
        - mountPath: /var/www/html
          name: data
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: data
      - configMap:
          defaultMode: 493
          name: trigger
        name: cgi
      - configMap:
          name: welcome
        name: welcome
  test: false
  triggers:
  - type: ConfigChange
  - imageChangeParams:
      automatic: true
      containerNames:
      - jmeter
      from:
        kind: ImageStreamTag
        name: jmeter:latest
        namespace: openshift
    type: ImageChange
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: jmeter
    app.kubernetes.io/component: jmeter
    app.kubernetes.io/instance: jmeter
  name: jmeter
spec:
  ports:
  - name: port-1
    port: 8080
    protocol: TCP
    targetPort: 8080
  - name: port-2
    port: 8443
    protocol: TCP
    targetPort: 8443
  selector:
    deploymentconfig: jmeter
  sessionAffinity: None
  type: ClusterIP